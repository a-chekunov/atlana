import {IFullProfileInfo} from "models/user-profile.models";
import {createAsyncAction, createAction} from "typesafe-actions";

enum USER_PROFILE_ACTIONS_TYPE {
    SET_REPO_SEARCH = 'SET_REPO_SEARCH',
    GET_USER_PROFILE_REQUEST = 'GET_USER_DETAILS_REQUEST',
    GET_USER_PROFILE_SUCCESS = 'GET_USER_PROFILE_SUCCESS',
    GET_USER_PROFILE_FAILURE = 'GET_USER_PROFILE_FAILURE',
    GET_USER_PROFILE_CANCEL = 'GET_USER_PROFILE_CANCEL',
    // GET_FILTERED_REPO_LIST_REQUEST = 'GET_FILTERED_REPO_LIST_REQUEST',
    // GET_FILTERED_REPO_LIST_SUCCESS = 'GET_FILTERED_REPO_LIST_SUCCESS',
    // GET_FILTERED_REPO_LIST_FAILURE = 'GET_FILTERED_REPO_LIST_FAILURE',
}

export const setRepoListSearchAction = createAction(USER_PROFILE_ACTIONS_TYPE.SET_REPO_SEARCH)<string>()

export const getUserProfileActions = createAsyncAction(
    USER_PROFILE_ACTIONS_TYPE.GET_USER_PROFILE_REQUEST,
    USER_PROFILE_ACTIONS_TYPE.GET_USER_PROFILE_SUCCESS,
    USER_PROFILE_ACTIONS_TYPE.GET_USER_PROFILE_FAILURE,
    USER_PROFILE_ACTIONS_TYPE.GET_USER_PROFILE_CANCEL,
)<void, IFullProfileInfo, string, void>();

// export const getFilteredUserRepoListActions = createAsyncAction(
//     USER_PROFILE_ACTIONS_TYPE.GET_FILTERED_REPO_LIST_REQUEST,
//     USER_PROFILE_ACTIONS_TYPE.GET_FILTERED_REPO_LIST_SUCCESS,
//     USER_PROFILE_ACTIONS_TYPE.GET_FILTERED_REPO_LIST_FAILURE,
// )<void, IUserRepoOriginal[], string>();